<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eva.classsystem.mapper.AttendanceMapper">
  <resultMap id="BaseResultMap" type="com.eva.classsystem.pojo.Attendance">
    <constructor>
      <idArg column="attendanceID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sirID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="createTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="actualNumber" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="attendanceCode" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="courseID" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    attendanceID, sirID, createTime, name, actualNumber, attendanceCode, courseID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance
    where attendanceID = #{attendanceid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attendance
    where attendanceID = #{attendanceid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.eva.classsystem.pojo.Attendance">
    insert into attendance (attendanceID, sirID, createTime, 
      name, actualNumber, attendanceCode, 
      courseID)
    values (#{attendanceid,jdbcType=INTEGER}, #{sirid,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{actualnumber,jdbcType=INTEGER}, #{attendancecode,jdbcType=VARCHAR}, 
      #{courseid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eva.classsystem.pojo.Attendance">
    insert into attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attendanceid != null">
        attendanceID,
      </if>
      <if test="sirid != null">
        sirID,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="actualnumber != null">
        actualNumber,
      </if>
      <if test="attendancecode != null">
        attendanceCode,
      </if>
      <if test="courseid != null">
        courseID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attendanceid != null">
        #{attendanceid,jdbcType=INTEGER},
      </if>
      <if test="sirid != null">
        #{sirid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="actualnumber != null">
        #{actualnumber,jdbcType=INTEGER},
      </if>
      <if test="attendancecode != null">
        #{attendancecode,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.eva.classsystem.pojo.Attendance">
    update attendance
    <set>
      <if test="sirid != null">
        sirID = #{sirid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="actualnumber != null">
        actualNumber = #{actualnumber,jdbcType=INTEGER},
      </if>
      <if test="attendancecode != null">
        attendanceCode = #{attendancecode,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        courseID = #{courseid,jdbcType=VARCHAR},
      </if>
    </set>
    where attendanceID = #{attendanceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eva.classsystem.pojo.Attendance">
    update attendance
    set sirID = #{sirid,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      actualNumber = #{actualnumber,jdbcType=INTEGER},
      attendanceCode = #{attendancecode,jdbcType=VARCHAR},
      courseID = #{courseid,jdbcType=VARCHAR}
    where attendanceID = #{attendanceid,jdbcType=INTEGER}
  </update>
</mapper>